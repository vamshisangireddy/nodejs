---
# This playbook automates adding the K8s kubeconfig file as a secret credential in Jenkins.
- name: 1. Fetch kubeconfig from the Kubernetes Master
  hosts: k8s_master
  become: yes
  tasks:
    - name: Fetch the kubeconfig file
      fetch:
        src: /home/ubuntu/.kube/config
        dest: /tmp/kubeconfig # This saves it to the local machine running Ansible
        flat: yes

- name: 2. Add the fetched kubeconfig as a Jenkins Credential
  hosts: localhost
  vars_prompt:
    - name: "jenkins_admin_user"
      prompt: "Enter your Jenkins admin username"
      private: no
    - name: "jenkins_admin_api_token"
      prompt: "Enter your Jenkins admin API token"
      private: yes
  tasks:
    - name: Wait for Jenkins to be fully up and running
      uri:
        url: "http://127.0.0.1:8080/login"
        status_code: 200
      register: result
      until: result.status == 200
      retries: 30
      delay: 10

    - name: Read the fetched kubeconfig file content
      command: cat /tmp/kubeconfig
      register: kubeconfig_content
      delegate_to: localhost

    - name: Create 'Secret file' credential in Jenkins via API
      uri:
        url: "http://127.0.0.1:8080/credentials/store/system/provider/plain-credentials/createCredentials"
        method: POST
        user: "{{ jenkins_admin_user }}"
        password: "{{ jenkins_admin_api_token }}"
        force_basic_auth: yes
        body_format: form-urlencoded
        body:
          json: >
            {
              "": "0",
              "credentials": {
                "scope": "GLOBAL",
                "id": "kubeconfig-creds",
                "fileName": "config",
                "description": "Kubeconfig for the production K8s cluster (automated)",
                "stapler-class": "org.jenkinsci.plugins.plaincredentials.impl.FileCredentialsImpl", # This is the correct class for file credentials
                "file": "file"
              }
            }
        # The 'file' part of the multipart form is a special parameter for the Jenkins API
        form:
          file: "{{ kubeconfig_content.stdout }}"

    - name: Clean up the local kubeconfig file
      file:
        path: /tmp/kubeconfig
        state: absent
      delegate_to: localhost